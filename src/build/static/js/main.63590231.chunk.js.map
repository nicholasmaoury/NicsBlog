{"version":3,"sources":["pages/article-content.js","components/ArticlesList.js","components/AddPostForm.js","pages/HomePage.js","pages/AboutPage.js","pages/ArticlesListPage.js","pages/NotFoundPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/ArticlePage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["articles","name","title","content","upvotes","author","ArticlesList","state","fetch","response","json","data","this","setState","list","forEach","article","push","className","to","body","substring","React","Component","AddPostForm","useState","username","setUsernameText","postText","setPostText","setTitleText","comments","addPost","a","method","JSON","stringify","headers","id","type","value","onChange","event","target","rows","cols","onClick","HomePage","AboutPage","href","ArticlesListPage","NotFoundPage","CommentsList","map","comment","key","text","UpvotesSection","articleName","setArticleInfo","upvoteArticle","result","AddCommentForm","setUsername","commentText","setCommentText","addComment","ArticlePage","match","params","articleContent","find","articleInfo","useEffect","contains","fetchData","paragraph","NavBar","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.63590231.chunk.js","sourcesContent":["const articles = [\n  {\n      name: '',\n      title: '',\n      content: [''],\n      upvotes: 0,\n      author: ''\n  }];\n\n  export default articles;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nexport default class ArticlesList extends React.Component {\n    state = {\n        articles: []\n    };\n\n    async componentDidMount() {\n        const response = await fetch(\"/api/articles/\");\n        // const response = await fetch(`/api/articles`);\n        const data = await response.json(response)\n        this.setState({ articles: data});\n        \n    }\n\n    render() {\n\n        \n        const list = [];\n        this.state.articles.forEach(article => {\n            list.push(\n                <>\n                <Link className=\"article-list-item\" to={`/article/${article.name}`}>\n                    <h3>{article.name}</h3>\n\n                    <p className=\"substring-content\">{article.body.substring(0,70)}...</p>\n\n                    {/* <p className=\"article-page-content\">{article.body}</p> */}\n\n                    <div className=\"article-list-item\">\n                        <p className=\"article-list-likes\">Likes | {article.upvotes}</p>\n                        <p className=\"article-author\">Author: {article.author}</p>\n                      \n                       \n                        \n                        <div className=\"line\"></div>\n                        \n                    </div>\n\n                </Link>\n                </>\n            );\n        });\n        \n        return <div>{list}</div>;\n\n    }\n}\n\n// const ArticlesList = ( {articles}) => {\n\n\n\n//     const name = articles.name;\n//     const article = articleContent.find(article => article.name === name);\n//     const [articleInfo, setArticleInfo] = useState({name: '', title: '', content: [''],  upvotes: 0, author: ''});\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             const result = await fetch(`/api/articles/${name}`);\n//             const contains = await result.json();\n\n//             setArticleInfo(contains);\n//         }\n//         fetchData();\n//     }, [name]);\n//     return (\n//     <>\n\n//     {articles.map((article, key) => (\n//         <Link className=\"article-list-item\" to={`/article/${article.name}`}>\n//         <h3>{article.title}</h3>\n\n//         <p className=\"substring-content\">{article.content[0].substring(0,150)}...</p>\n//         {article.content.map((paragraph, key)=> (\n//         <p className=\"article-page-content\" key = {key}>{article.body}</p>\n//         ))}\n//         <div className=\"article-list-item\"> \n//         <p className=\"article-list-likes\">Likes | {article.upvotes}</p>\n//         <p className=\"article-author\">Author: {article.author}</p>\n//         <br></br>\n//         <div className=\"line\"></div>\n//         </div>\n//         </Link>\n\n\n\n//      ))}\n//     </>\n//     )\n// }","import React, { useState } from 'react';\nimport {\n    Link\n} from 'react-router-dom';\n\nconst AddPostForm = () => {\n    const  [username, setUsernameText] = useState('');\n    const [postText, setPostText] = useState('');\n    const [title, setTitleText] = useState('');\n    \n    \n    const upvotes = 0;\n    const comments = [];\n\n    const addPost = async () => {\n        const result = fetch(`/api/articles`, {\n            method: 'post',\n            body: JSON.stringify({title, postText, username, upvotes, comments}),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        });\n        \n        setUsernameText('');\n        setTitleText('');\n        setPostText('');\n\n        \n       \n        \n \n        \n    }\n\n\n\n    return (\n    <div id=\"add-post-form\">\n        <h2>\n            Create an Article\n        </h2>\n        <label>\n            Title:\n            <input type=\"text\" value={title} onChange={(event) => setTitleText(event.target.value)} />\n        </label>\n        <label>\n            Article:\n            <textarea rows=\"4\" cols=\"50\" value={postText} onChange={(event) => setPostText(event.target.value)}/>\n            \n        </label>\n        \n        <label>\n            Author:\n            <input type=\"text\" value={username} onChange={(event) => setUsernameText(event.target.value)} />\n        </label>\n        <Link to={`/article/${title}`}>\n        <button onClick={() => addPost()}>Post</button>\n        </Link>\n    \n    </div>\n    \n    )};\n\nexport default AddPostForm;\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport articleContent from './article-content';\nimport ArticlesList from '../components/ArticlesList';\nimport AddPostForm from '../components/AddPostForm';\n\nconst HomePage = () => (\n    <>\n    <AddPostForm  />\n    </>\n);\n\nexport default HomePage;\n","import React from 'react';\n\nconst AboutPage = () => (\n\n\n    <>\n<h1>About Me</h1>\n<h3>Tech</h3>\n<p>Technology has been a part of my life ever since I was a young boy. I vividly remember taking apart my friend's mom's cell phone with him when we were younger.\n    I've always been interested in not just HOW things work, but WHY we choose to interact with things the way we do. <br></br><br></br>\n    Throughout my early childhood, there weren't many opportunities to take classes on tech related subjects. I spent a lot of my early teen years\n    doing research on how to build things with code. At this point in my life, I wasn't building the next FaceBook or Twitter, but I was\n    tinkering around with different, small problems. Finally, in 11th and 12th grade my High School offered \"Web-Tech\" and \"Advanced Web-Tech\". These classes were\n    the closest thing to technology I could get my hands on in a school setting, so I signed up! Though we didn't do any sort of node.js, react, etc... It still\n    provided the ease of knowing exactly what I wanted to do when going into college: Computer Science!\n    <br></br><br></br>\n    College has taught me many, many things about the Computer Science field. Looking back on it all, I can't believe I've learned as much as I did.\n    At its core, computer science is FUN problem solving. Things like algorithm design and speed never really occurred to me as important until taking classes on them.\n    I've also learned a lot about development processes and what It's like to go through iterations of a project!</p>\n    <br></br>\n    <p>My years in the computer science major at James Madison University provided a wealth of knowledge regarding the logistics of what computer science \n    is, but what prepared me for the real world was my internships. These internships not only provided me with cool things to build, but it also provided me\n    with a way of learning: as a team. There are countless ways to solve any problem in computer science. Working with friends and teammates to solve\n    these problems opened my eyes to the countless possibilities computer science holds. \n    </p>\n   \n    <h3>Music</h3>\n    <p>\n    Other than technology, my other passion is music. In my free time, I run a home recording studio where I produce not only music for myself, but other people! \n    Since the age of 7 years old I have been playing guitar. My early influences stem from bands like AC/DC and Nirvana, but now my tastes have widened. \n    Upon starting school at JMU, I decided to create a band called \"Lilac War\". At first, it was a solo project revolving around the genre of acoustic/indie,\n    but I have since taken my best friends under my wing for live performances where we have a \"full-band\" sound. <br></br><br>\n    </br>In the past 3 years, we've accumulated over 250,000\n    streams on Spotify, hundreds of singles sold, and many shows under our belts. \n    If you're interested in learning more about my musical endeavors/listening to my band's music, you can view my band's press kit here: \n    \n    <a href=\"https://docs.google.com/presentation/d/1n1U9Iyx9lgz9MPuYCs7l1ofciOyWjcI6wVPmD6lFbSI/edit?usp=sharing\" target=\"_blank\"> Lilac War </a>\n\n\n    </p>\n    </>\n    \n);\n\nexport default AboutPage;","import React from 'react';\nimport articleContent from './article-content';\nimport ArticlesList from '../components/ArticlesList';\n\n\n\n\n\nconst ArticlesListPage = () => (\n    \n    <>\n    <h1>Articles</h1>\n    <ArticlesList className=\"article-list-all\"/>\n    </>\n    );\n\nexport default ArticlesListPage;\n\n\n\n","import React from 'react';\n\nconst NotFoundPage = () => (\n    <h1>404: Page Not Found</h1>\n);\n\nexport default NotFoundPage;","import React from 'react';\n\nconst CommentsList = ({comments}) => (\n    <>\n    <h3>Comments:</h3>\n    {comments.map((comment,key) => (\n        <div className=\"comment\" key={key}>\n            <h4>{comment.username}</h4>\n            <p className=\"comment-text\">{comment.text}</p>\n        </div>   \n    ))}\n    \n    </>\n);\n\nexport default CommentsList;","import React from 'react';\n\nconst UpvotesSection = ({articleName, upvotes, setArticleInfo}) => {\n    const upvoteArticle = async () => {\n        const result = await fetch(`/api/articles/${articleName}/upvote`, {\n            method: 'post',\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n    }\n    return (\n        <div id=\"upvotes-section\">\n            <button onClick={() => upvoteArticle()}>Like</button>\n            \n        </div>\n    );\n}\n\nexport default UpvotesSection;","import React, { useState } from 'react';\nimport { async } from 'q';\n\nconst AddCommentForm = ({articleName, setArticleInfo }) => {\n    const  [username, setUsername] = useState('');\n    const [commentText, setCommentText] = useState('');\n\n    const addComment = async () => {\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n            method: 'post',\n            body: JSON.stringify({username, text: commentText}),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n        setUsername('');\n        setCommentText('');\n    }\n    return (\n    <div id=\"add-comment-form\">\n        <h3>\n            Add a Comment\n        </h3>\n        <label>\n            Name:\n            <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\n        </label>\n        <label>\n            Comment:\n            <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)}/>\n        </label>\n    <button onClick={() => addComment()}>Submit</button>\n    </div>\n    )};\n\nexport default AddCommentForm;","import React, { useState, useEffect } from 'react';\nimport articleContent from './article-content';\nimport ArticlesList from '../components/ArticlesList';\nimport NotFoundPage from './NotFoundPage';\nimport { async } from 'q';\nimport CommentsList from '../components/CommentsList';\nimport UpvotesSection from '../components/UpvotesSection';\nimport AddCommentForm from '../components/AddCommentForm';\n\n\n\nconst ArticlePage = ({ match }) => {\n\n    \n    //\n    const name = match.params.name;\n    const article = articleContent.find(article => article.name !== name);\n    \n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch(`/api/articles/${name}`);\n            const contains = await result.json();\n            \n            setArticleInfo(contains);\n        }\n        fetchData();\n    }, [name]);\n\n    if (!article) return <NotFoundPage />\n    //const otherArticles = articleContent.filter(articleInfo => articleInfo.name !== name );\n\n    return (\n    <>\n    <h1 className=\"article-page-title\">{articleInfo.name}</h1>\n    <br></br><p className=\"article-page-author\">By: {articleInfo.author}</p><br></br>\n    \n    <p className=\"article-page-likes\">Likes |  {articleInfo.upvotes}</p>\n\n    {article.content.map((paragraph, key)=> (\n        <p className=\"article-page-content\" key = {key}>{articleInfo.body}</p>\n    ))}\n\n    <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo}/>\n    <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\n    <CommentsList comments={articleInfo.comments} />\n    {/* <h3>Other Articles:</h3>\n    <ArticlesList  /> */}\n    </>\n\n    );\n\n}\n\n\nexport default ArticlePage;","import React from 'react';\nimport {\n    Link \n} from 'react-router-dom';\nconst NavBar = () => (\n    <nav>\n        <ul>\n        <li>\n            <Link to=\"/articles-list\">Articles</Link>\n            </li>\n            <p>|</p>\n            <li>\n                <Link to=\"/\">Create</Link>\n            </li>\n            <p>|</p>\n            <li>\n                <Link to=\"/about\">About Me</Link>\n            </li>\n            \n        </ul>\n    </nav>\n);\n\nexport default NavBar;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport ArticlePage from './pages/ArticlePage';\nimport NavBar from './NavBar';\nimport NotFoundPage from './pages/NotFoundPage';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <NavBar />\n      <div id=\"page-body\">\n        <Switch>\n        <Route path=\"/\" component={HomePage} exact />\n        <Route path=\"/articles-list\" component={ArticlesListPage}/>\n        <Route path=\"/article/:name\" component={ArticlePage} />\n        <Route path=\"/about\" component={AboutPage} />\n        <Route component={NotFoundPage} />\n      </Switch>\n      </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}